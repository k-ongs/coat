##      日期            操作者         修改记录
## 2020年03月25日        bear          修改目录结构
## 2020年03月26日        bear          更改项目插件及配置文件命名格式

## 框架结构说明

main                    //框架核心文件
    ├— main.php             // 框架核心类
    ├— route.php            // 框架路由类
    └— start.php            // 框架入口文件
cache                   //缓存文件
public                  //公共文件
    ├— .htaccess            //伪静态配置
    └— index.php            //框架入口
plugin                  //框架插件文件
vendor                  //第三方插件
config                  //配置文件
    └— system.php           //框架系统配置文件
project                 //项目文件
    └— module               //模块
        └— controller.php           //控制器





## 代码规范

1、通用命名规则
    函数命名, 变量命名, 文件命名要有描述性; 少用缩写.
    尽可能使用描述性的命名, 别心疼空间, 毕竟相比之下让代码易于新读者理解更重要. 
    不要用只有项目开发者能理解的缩写, 也不要通过砍掉几个字母来缩写单词.

2、文件命名
    文件名要全部小写, 可以包含下划线 (_) 或连字符 (-), 依照项目的约定. 如果没有约定, 那么 “_” 更好.

3、变量命名
    变量 (包括函数参数) 和数据成员名一律小写, 单词之间用下划线连接. 类的成员变量以下划线结尾.

4、常量命名
    声明为 define 或 const 的变量, 或在程序运行期间其值始终保持不变的, 命名时以 “k” 开头, 大小写混合.
    const kDaysInAWeek = 7;

5、函数命名
    常规函数使用大小写混合, 取值和设值函数则要求与变量名匹配.
    MyExcitingFunction(), MyExcitingMethod(), my_exciting_member_variable(), set_my_exciting_member_variable()

6、命名空间命名
    命名空间以小写字母命名. 最高级命名空间的名字取决于项目名称. 
    要注意避免嵌套命名空间的名字之间和常见的顶级命名空间的名字之间发生冲突.
    顶级命名空间的名称应当是项目名或者是该命名空间中的代码所属的团队的名字. 
    命名空间中的代码, 应当存放于和命名空间的名字匹配的文件夹或其子文件夹中.
    注意 不使用缩写作为名称 的规则同样适用于命名空间. 
    命名空间中的代码极少需要涉及命名空间的名称, 因此没有必要在命名空间中使用缩写.

7、所有系统变量、常量均为大写

8、项目插件命名均为：插件名.class.php 格式，配置文件统一放入config文件夹里面，命名为：插件名.config.php，第三方类放入vendor文件夹中

9、需满足PSR-0规范即：
    1) 命名空间必须与绝对路径一致
    2) 类名首字母必须大写
    3) 除去入口文件外，其他“.php”必须只有一个类
    4) php类文件必须自动载入，不采用include等
    5) 单一入口
